class Solution:
    def longestPalindrome(self, s: str) -> str:
        if len(s) == 0:
            return ''
        cur_str = ''
        re_str = s[0]
        for i in range(len(s)):
            cur_str += s[i]
            for j in s[i+1:]:
                cur_str += j
                if cur_str == cur_str[::-1] and len(cur_str) > len(re_str):
                    re_str = cur_str[:]
            cur_str = ''
            
        return re_str

class Solution:
    def longestPalindrome(self, s: str) -> str:
        if len(s) == 0:
            return ''
        if len(s) == 1:
            return s[0]
    
        for i in range(len(s)):
            for j in range(i+1):
                cur_s = s[j:len(s)-i+j]
                if cur_s == cur_s[::-1]:
                    return cur_s
    
        return s[0]
